package example.nz.org.take.compiler.userv.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Mon Feb 11 13:49:17 NZDT 2008
 */
@SuppressWarnings("unchecked")
class KBFragement_less_than_or_equal_11 {
    /**
     * Method generated for query less_than_or_equal[in,in]
     * @param nz.org.take.compiler.reference.Slot@1557c0
     * @param nz.org.take.compiler.reference.Slot@1342a67
     * @return an iterator
     * code generated using velocity template Comparison_11.vm
    */
    static ResourceIterator<less_than_or_equal> less_than_or_equal_11(
        final double slot1, final double slot2,
        final DerivationController _derivation) {
        _derivation.log("<=", DerivationController.COMPARISON);

        if (slot1 <= slot2) {
            less_than_or_equal result = new less_than_or_equal();
            result.slot1 = slot1;
            result.slot2 = slot2;

            return new SingletonIterator<less_than_or_equal>(result);
        }

        return EmptyIterator.DEFAULT;
    }
}
