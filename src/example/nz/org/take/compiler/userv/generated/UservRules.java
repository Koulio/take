package example.nz.org.take.compiler.userv.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Mon Feb 11 13:49:16 NZDT 2008
 */
@SuppressWarnings("unchecked")
public class UservRules {
    private static java.util.Map<String, java.util.Map<String, String>> _annotations =
        null;

    /**
    * Method that can be used to query annotations at runtime.
    * @param id the id of the rule (or other knowledge element)
    * @return a map of annotations (string-string mappings)
    * code generated using velocity template LocalAnnotationMethod.vm
    */
    public java.util.Map<String, String> getAnnotations(String id) {
        if (_annotations == null) {
            synchronized (UservRules.class) {
                if (_annotations == null) {
                    java.beans.XMLDecoder decoder = new java.beans.XMLDecoder(new java.io.BufferedInputStream(
                                UservRules.class.getResourceAsStream(
                                    "/example/nz/org/take/compiler/userv/generated/annotations.xml")));
                    _annotations = (java.util.Map<String, java.util.Map<String, String>>) decoder.readObject();
                    decoder.close();
                }
            }
        }

        return _annotations.get(id);
    }

    /**
     * Method that can be used to query global annotations at runtime.
     * Global annotations are attached to the knowledge base, not to
     * a particular element (rule,..).
     * @return a map of annotations (string-string mappings)
     * code generated using velocity template GlobalAnnotationMethod.vm
    */
    public java.util.Map<String, String> getAnnotations() {
        return getAnnotations("___global_annotations");
    }

    /**
    * Method generated for query /potentialTheftRating[in,out]
    * @param car input parameter generated from slot 0
    * @return an iterator for instances of PotentialTheftRating
    */
    public ResultSet<PotentialTheftRating> getPotenialTheftRating(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PotentialTheftRating> _result = new ResultSet(KBFragement_getPotenialTheftRating.getPotenialTheftRating(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /potentialOccupantInjuryRating[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PotentialOccupantInjuryRating
    */
    public ResultSet<PotentialOccupantInjuryRating> getPotentialOccupantInjuryRating(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PotentialOccupantInjuryRating> _result = new ResultSet(KBFragement_getPotentialOccupantInjuryRating.getPotentialOccupantInjuryRating(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /autoEligibility[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of AutoEligibility
    */
    public ResultSet<AutoEligibility> getAutoEligibility(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<AutoEligibility> _result = new ResultSet(KBFragement_getAutoEligibility.getAutoEligibility(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /driverCategory[in,out]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of DriverCategory
    */
    public ResultSet<DriverCategory> getDriverCategory(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<DriverCategory> _result = new ResultSet(KBFragement_getDriverCategory.getDriverCategory(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /isEligible[in]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of DriverEligibility
    */
    public ResultSet<DriverEligibility> getDriverEligibility(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<DriverEligibility> _result = new ResultSet(KBFragement_getDriverEligibility.getDriverEligibility(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /isHighRiskDriver[in]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of HighRiskDriver
    */
    public ResultSet<HighRiskDriver> isHighRiskDriver(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<HighRiskDriver> _result = new ResultSet(KBFragement_isHighRiskDriver.isHighRiskDriver(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /hasTrainingCertification[in]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of TrainedDriver
    */
    public ResultSet<TrainedDriver> hasTrainingCertification(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<TrainedDriver> _result = new ResultSet(KBFragement_hasTrainingCertification.hasTrainingCertification(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /policyEligibilityScore[in,in,out]
     * @param car input parameter generated from slot 0
     * @param driver input parameter generated from slot 1
     * @return an iterator for instances of PolicyEligibilityScore
    */
    public ResultSet<PolicyEligibilityScore> getPolicyEligibilityScore(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PolicyEligibilityScore> _result = new ResultSet(KBFragement_getPolicyEligibilityScore.getPolicyEligibilityScore(
                    car, driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /insuranceEligibility[in,in,out]
     * @param car input parameter generated from slot 0
     * @param driver input parameter generated from slot 1
     * @return an iterator for instances of InsuranceEligibility
    */
    public ResultSet<InsuranceEligibility> getPolicyEligibility(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<InsuranceEligibility> _result = new ResultSet(KBFragement_getPolicyEligibility.getPolicyEligibility(
                    car, driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /isLongTermClient[in]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of LongTermClient
    */
    public ResultSet<LongTermClient> isLongTermClient(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<LongTermClient> _result = new ResultSet(KBFragement_isLongTermClient.isLongTermClient(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /basePremium[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of BasePremium
    */
    public ResultSet<BasePremium> getBasePremium(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<BasePremium> _result = new ResultSet(KBFragement_getBasePremium.getBasePremium(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    public ResultSet<AdditionalPremium> getAdditionalPremium(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<AdditionalPremium> _result = new ResultSet(KBFragement_getAdditionalPremium.getAdditionalPremium(
                    policy, car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /additionalDriverPremium[in,out]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of AdditionalDriverPremium
    */
    public ResultSet<AdditionalDriverPremium> getAdditionalDriverPremium(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<AdditionalDriverPremium> _result = new ResultSet(KBFragement_getAdditionalDriverPremium.getAdditionalDriverPremium(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /premiumDiscount[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PremiumDiscount
    */
    public ResultSet<PremiumDiscount> getPremiumDiscount(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PremiumDiscount> _result = new ResultSet(KBFragement_getPremiumDiscount.getPremiumDiscount(
                    car, _derivation), _derivation);

        return _result;
    }
}
