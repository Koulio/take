package example.nz.org.take.compiler.userv.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Mon Feb 11 13:49:16 NZDT 2008
 */
@SuppressWarnings("unchecked")
class KBFragement_getPremiumDiscount {
    /**
     * Method generated for query /premiumDiscount[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PremiumDiscount
    */
    public static ResultSet<PremiumDiscount> getPremiumDiscount(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PremiumDiscount> _result = new ResultSet(KBFragement_getPremiumDiscount.getPremiumDiscount(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /premiumDiscount[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PremiumDiscount
    */
    static ResourceIterator<PremiumDiscount> getPremiumDiscount(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        final int _derivationlevel = _derivation.getDepth();
        ResourceIterator<PremiumDiscount> result = new IteratorChain<PremiumDiscount>(4) {
                public Object getIteratorOrObject(int pos) {
                    switch (pos) {
                    // AD_01  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,12)
                    case 0:
                        return getPremiumDiscount_0(car,
                            _derivation.reset(_derivationlevel));

                    // AD_02  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,15)
                    case 1:
                        return getPremiumDiscount_1(car,
                            _derivation.reset(_derivationlevel));

                    // AD_03  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,18)
                    case 2:
                        return getPremiumDiscount_2(car,
                            _derivation.reset(_derivationlevel));

                    // AD_04  IF /potentialTheftRating(<car>,high) AND hasAlarm(<car>) THEN /premiumDiscount(<car>,10)
                    case 3:
                        return getPremiumDiscount_3(car,
                            _derivation.reset(_derivationlevel));

                    default:
                        return EmptyIterator.DEFAULT;
                    } // switch(pos)
                } // getIterator()

                public String getRuleRef(int pos) {
                    switch (pos) {
                    // AD_01  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,12)
                    case 0:
                        return "AD_01";

                    // AD_02  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,15)
                    case 1:
                        return "AD_02";

                    // AD_03  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,18)
                    case 2:
                        return "AD_03";

                    // AD_04  IF /potentialTheftRating(<car>,high) AND hasAlarm(<car>) THEN /premiumDiscount(<car>,10)
                    case 3:
                        return "AD_04";

                    default:
                        return "";
                    } // switch(pos)
                } // getRuleRef()
            };

        return result;
    }

    /**
     * Method generated for query /premiumDiscount[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PremiumDiscount
    */
    private static ResourceIterator<PremiumDiscount> getPremiumDiscount_0(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AD_01", DerivationController.RULE, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,12)
        class bindingsInRule60 {
            // Property generated for term  "12"
            long p1;

            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p2;
        }
        ;

        final bindingsInRule60 bindings = new bindingsInRule60();
        bindings.p1 = 12;
        bindings.p2 = car;

        // code for prereq hasAirbags(<car>)
        final ResourceIterator<hasAirbags> iterator1 = KBFragement_hasAirbags_1.hasAirbags_1(car,
                _derivation.increaseDepth());

        // code for prereq hasFrontPassengerAirbag(<car>)
        final ResourceIterator<not_hasFrontPassengerAirbag> iterator2 = new NestedIterator<hasAirbags, not_hasFrontPassengerAirbag>(iterator1) {
                public ResourceIterator<not_hasFrontPassengerAirbag> getNextIterator(
                    hasAirbags object) {
                    bindings.p2 = object.slot1;

                    return KBFragement_not_hasFrontPassengerAirbag_1.not_hasFrontPassengerAirbag_1(bindings.p2,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq hasSidePanelAirbags(<car>)
        final ResourceIterator<not_hasSidePanelAirbags> iterator3 = new NestedIterator<not_hasFrontPassengerAirbag, not_hasSidePanelAirbags>(iterator2) {
                public ResourceIterator<not_hasSidePanelAirbags> getNextIterator(
                    not_hasFrontPassengerAirbag object) {
                    bindings.p2 = object.slot1;

                    return KBFragement_not_hasSidePanelAirbags_1.not_hasSidePanelAirbags_1(bindings.p2,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq /premiumDiscount(<car>,12)
        final ResourceIterator<PremiumDiscount> iterator4 = new NestedIterator<not_hasSidePanelAirbags, PremiumDiscount>(iterator3) {
                public ResourceIterator<PremiumDiscount> getNextIterator(
                    not_hasSidePanelAirbags object) {
                    bindings.p2 = object.slot1;

                    return new SingletonIterator(new PremiumDiscount(
                            bindings.p2, bindings.p1));
                }
            };

        return iterator4;
    }

    /**
     * Method generated for query /premiumDiscount[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PremiumDiscount
    */
    private static ResourceIterator<PremiumDiscount> getPremiumDiscount_1(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AD_02", DerivationController.RULE, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,15)
        class bindingsInRule61 {
            // Property generated for term  "15"
            long p1;

            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p2;
        }
        ;

        final bindingsInRule61 bindings = new bindingsInRule61();
        bindings.p1 = 15;
        bindings.p2 = car;

        // code for prereq hasAirbags(<car>)
        final ResourceIterator<hasAirbags> iterator1 = KBFragement_hasAirbags_1.hasAirbags_1(car,
                _derivation.increaseDepth());

        // code for prereq hasFrontPassengerAirbag(<car>)
        final ResourceIterator<hasFrontPassengerAirbag> iterator2 = new NestedIterator<hasAirbags, hasFrontPassengerAirbag>(iterator1) {
                public ResourceIterator<hasFrontPassengerAirbag> getNextIterator(
                    hasAirbags object) {
                    bindings.p2 = object.slot1;

                    return KBFragement_hasFrontPassengerAirbag_1.hasFrontPassengerAirbag_1(bindings.p2,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq hasSidePanelAirbags(<car>)
        final ResourceIterator<not_hasSidePanelAirbags> iterator3 = new NestedIterator<hasFrontPassengerAirbag, not_hasSidePanelAirbags>(iterator2) {
                public ResourceIterator<not_hasSidePanelAirbags> getNextIterator(
                    hasFrontPassengerAirbag object) {
                    bindings.p2 = object.slot1;

                    return KBFragement_not_hasSidePanelAirbags_1.not_hasSidePanelAirbags_1(bindings.p2,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq /premiumDiscount(<car>,15)
        final ResourceIterator<PremiumDiscount> iterator4 = new NestedIterator<not_hasSidePanelAirbags, PremiumDiscount>(iterator3) {
                public ResourceIterator<PremiumDiscount> getNextIterator(
                    not_hasSidePanelAirbags object) {
                    bindings.p2 = object.slot1;

                    return new SingletonIterator(new PremiumDiscount(
                            bindings.p2, bindings.p1));
                }
            };

        return iterator4;
    }

    /**
     * Method generated for query /premiumDiscount[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PremiumDiscount
    */
    private static ResourceIterator<PremiumDiscount> getPremiumDiscount_2(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AD_03", DerivationController.RULE, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF hasAirbags(<car>) AND hasFrontPassengerAirbag(<car>) AND hasSidePanelAirbags(<car>) THEN /premiumDiscount(<car>,18)
        class bindingsInRule62 {
            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p1;

            // Property generated for term  "18"
            long p2;
        }
        ;

        final bindingsInRule62 bindings = new bindingsInRule62();
        bindings.p1 = car;
        bindings.p2 = 18;

        // code for prereq hasAirbags(<car>)
        final ResourceIterator<hasAirbags> iterator1 = KBFragement_hasAirbags_1.hasAirbags_1(car,
                _derivation.increaseDepth());

        // code for prereq hasFrontPassengerAirbag(<car>)
        final ResourceIterator<hasFrontPassengerAirbag> iterator2 = new NestedIterator<hasAirbags, hasFrontPassengerAirbag>(iterator1) {
                public ResourceIterator<hasFrontPassengerAirbag> getNextIterator(
                    hasAirbags object) {
                    bindings.p1 = object.slot1;

                    return KBFragement_hasFrontPassengerAirbag_1.hasFrontPassengerAirbag_1(bindings.p1,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq hasSidePanelAirbags(<car>)
        final ResourceIterator<hasSidePanelAirbags> iterator3 = new NestedIterator<hasFrontPassengerAirbag, hasSidePanelAirbags>(iterator2) {
                public ResourceIterator<hasSidePanelAirbags> getNextIterator(
                    hasFrontPassengerAirbag object) {
                    bindings.p1 = object.slot1;

                    return KBFragement_hasSidePanelAirbags_1.hasSidePanelAirbags_1(bindings.p1,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq /premiumDiscount(<car>,18)
        final ResourceIterator<PremiumDiscount> iterator4 = new NestedIterator<hasSidePanelAirbags, PremiumDiscount>(iterator3) {
                public ResourceIterator<PremiumDiscount> getNextIterator(
                    hasSidePanelAirbags object) {
                    bindings.p1 = object.slot1;

                    return new SingletonIterator(new PremiumDiscount(
                            bindings.p1, bindings.p2));
                }
            };

        return iterator4;
    }

    /**
     * Method generated for query /premiumDiscount[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PremiumDiscount
    */
    private static ResourceIterator<PremiumDiscount> getPremiumDiscount_3(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AD_04", DerivationController.RULE, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF /potentialTheftRating(<car>,high) AND hasAlarm(<car>) THEN /premiumDiscount(<car>,10)
        class bindingsInRule63 {
            // Property generated for term  "high"
            java.lang.String p1;

            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p2;

            // Property generated for term  "10"
            long p3;
        }
        ;

        final bindingsInRule63 bindings = new bindingsInRule63();
        bindings.p1 = "high";
        bindings.p2 = car;
        bindings.p3 = 10;

        // code for prereq /potentialTheftRating(<car>,high)
        final ResourceIterator<PotentialTheftRating> iterator1 = KBFragement_getPotenialTheftRating.getPotenialTheftRating(car,
                "high", _derivation.increaseDepth());

        // code for prereq hasAlarm(<car>)
        final ResourceIterator<hasAlarm> iterator2 = new NestedIterator<PotentialTheftRating, hasAlarm>(iterator1) {
                public ResourceIterator<hasAlarm> getNextIterator(
                    PotentialTheftRating object) {
                    bindings.p2 = object.car;
                    bindings.p1 = "high";

                    return KBFragement_hasAlarm_1.hasAlarm_1(bindings.p2,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq /premiumDiscount(<car>,10)
        final ResourceIterator<PremiumDiscount> iterator3 = new NestedIterator<hasAlarm, PremiumDiscount>(iterator2) {
                public ResourceIterator<PremiumDiscount> getNextIterator(
                    hasAlarm object) {
                    bindings.p2 = object.slot1;

                    return new SingletonIterator(new PremiumDiscount(
                            bindings.p2, bindings.p3));
                }
            };

        return iterator3;
    }
}
